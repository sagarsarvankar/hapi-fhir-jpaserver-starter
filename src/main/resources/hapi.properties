# Basic server configuration
#server.name=HAPI FHIR Server
#server.version=5.5.0
#fhir.version=r4

#Enable Security for FHIR Server
server.enablesecurity=true

#token_endpoint_auth_signing_alg_values_supported
server.token_endpoint_auth_signing_alg_values_supported = RS384,ES384

server.grant_types_supported=authorization_code,client_credentials

# Enable SMART on FHIR .well-known/smart-configuration endpoint
server.smart_enabled=true

# OAuth 2.0 Authorization server endpoints for SMART on FHIR
# These settings are essential for enabling the SMART configuration endpoint

# Authorization endpoint
server.oauth.authorization_endpoint=https://auth.example.com/oauth2/authorize

# Token endpoint
server.oauth.token_endpoint=https://auth.example.com/oauth2/token

# Token introspection endpoint (optional, for resource servers)
server.oauth.introspection_endpoint=https://auth.example.com/oauth2/introspect

# SMART capabilities supported by this server
# You can list any supported capabilities as a comma-separated list.
# Common SMART capabilities include:
# - launch-ehr: Support for launching from within an EHR
# - client-public: Support for public client registrations
# - client-confidential-symmetric: Support for confidential clients
# - sso-openid-connect: Single Sign-On via OpenID Connect
# - permission-offline: Offline access support
# - permission-patient: Patient-level access support
# - permission-user: User-level access support
server.smart_capabilities=launch-ehr,launch-standalone,client-public,client-confidential-asymmetric,client-confidential-symmetric,sso-openid-connect,context-banner,context-style,context-ehr-patient,context-ehr-encounter,context-standalone-patient,context-standalone-encounter,permission-offline,permission-patient,permission-user,permission-v1,permission-v2,authorize-post

# Optional: Scopes supported by the server (optional, but useful to list explicitly)
server.smart_scopes_supported=openid,fhirUser,profile,launch,user/Patient.read,user/Observation.read


#you can add more by using comma below
server.code_challenge_methods_supported=S256

# Optional: Define the token endpoint authentication methods supported
server.smart_token_endpoint_auth_methods_supported=private_key_jwt

# JWKS endpoint (if applicable) for public keys used in token verification
server.oauth.jwks_uri=https://auth.example.com/oauth2/jwks

# Other optional OpenID configuration values, if supported
server.oauth.userinfo_endpoint=https://auth.example.com/oauth2/userinfo
server.oauth.revocation_endpoint=https://auth.example.com/oauth2/revoke

server.issuer=http://localhost:8007/fhir

# Additional FHIR-specific configuration options
# URL where the server is hosted
server.base_url=http://localhost:8007/fhir

# Define the SMART Conformance Provider if required
server.fhir_conformance.provider=ca.uhn.fhir.jpa.starter.SmartConformanceProvider

# The server can generate the .well-known/smart-configuration at the endpoint [base-url]/.well-known/smart-configuration
